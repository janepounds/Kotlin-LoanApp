package com.cabral.emaishapay.utilsimport android.app.Dialogimport android.content.Contextimport android.graphics.Pointimport android.os.Buildimport android.view.ViewGroupimport android.view.WindowManagerimport androidx.core.content.ContextCompatimport androidx.viewbinding.ViewBindingimport com.google.android.material.dialog.MaterialAlertDialogBuilderimport com.cabral.emaishapay.Rimport com.cabral.emaishapay.ui.interfaces.AlertDialogCallbackfun createDialog(layoutResViewBinding: ViewBinding, drawableID: Int, cancellable: Boolean): Dialog {    val context = layoutResViewBinding.root.context    val dialog = Dialog(context)    with(dialog) {        setContentView(layoutResViewBinding.root)        setCancelable(cancellable)        window?.setLayout(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT)        window?.setBackgroundDrawable(ContextCompat.getDrawable(context, drawableID))    }    return dialog}fun createFullScreenDialog(layoutResViewBinding: ViewBinding, drawableID: Int, cancellable: Boolean): Dialog {    val context = layoutResViewBinding.root.context    val wm = context.getSystemService(Context.WINDOW_SERVICE) as WindowManager    val display = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {        context.display    } else {        @Suppress("DEPRECATION")        wm.defaultDisplay // deprecated in API 30    }    val size = Point()    @Suppress("DEPRECATION")    display?.getSize(size)    val width = size.x - (0.1 * size.x)    val height = ViewGroup.LayoutParams.WRAP_CONTENT    val dialog = Dialog(context)    with(dialog) {        setContentView(layoutResViewBinding.root)        setCancelable(cancellable)        window?.setLayout(width.toInt(), height)        window?.setBackgroundDrawable(ContextCompat.getDrawable(context, drawableID))    }    return dialog}fun Context.createLoadingDialog(): Dialog {    val dialog = Dialog(this)    with(dialog) {        setContentView(R.layout.dialog_loading_progress)        setCancelable(false)        window?.setLayout(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT)        window?.setBackgroundDrawable(ContextCompat.getDrawable(this@createLoadingDialog, R.drawable.progress_circle))    }    return dialog}fun showAlertDialog(context: Context, positionBtnText: String, title: String, subTitle: String, listener: AlertDialogCallback) {    val resources = context.resources    MaterialAlertDialogBuilder(context)        .setTitle(title)        .setMessage(subTitle)        .setCancelable(true)        .setNegativeButton(resources.getString(R.string.cancel)) { dialog, _ ->            listener.onNegativeButtonClick(dialog = dialog)        }        .setPositiveButton(positionBtnText) { _, _ ->            listener.onPositiveButtonClick()        }        .show()}